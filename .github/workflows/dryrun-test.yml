name: dryrun

on:
  pull_request:
    branches: master
    types:
      - opened
      - synchronize
      - closed

jobs:
  dryrun:
    runs-on: ubuntu-latest
    steps:
      #### git checkout
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: fetch master
        run: |
          git fetch --no-tags --prune --depth=2 origin +refs/heads/${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
      #### list diff
      - name: list updated zones (PR update)
        if: github.event.pull_request.merged == false && github.event.pull_request.state == 'open'
        run: |
          git diff 'remotes/origin/${{ github.base_ref }}' HEAD --name-only
          echo "----------------"
          git show 'remotes/origin/master' --oneline
          git show HEAD --oneline
      - name: list updated zones (PR merge)
        if: github.event.pull_request.merged == true
        run: |
          git diff HEAD\^ HEAD --name-only
          echo "----------------"
          git show HEAD\^ --oneline
          git show HEAD --oneline

      - name: create dryrun text
        id: create-dryrun-text
        shell: bash -o pipefail {0}
        run: |
          echo -e "## DryRun Result\n\n" > comment.txt
          echo -e "testtest dayo\n\n" >> comment.txt
          body=$(cat comment.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "body=${body}" >> $GITHUB_OUTPUT

      - name: create comment
        uses: actions/github-script@v6
        with:
          script: |
            const { promises: fs } = require('fs')
            let content = await fs.readFile('comment.txt', 'utf8')
            if (trim) {
              content = content.trim()
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: content
            })
